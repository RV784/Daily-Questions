//https://nados.io/question/find-all-anagrams-in-a-string?zen=true

import java.util.*;

public class Main {
	public static boolean compare(HashMap<Character, Integer> map1, HashMap<Character, Integer> map2){
		for(char ch : map1.keySet()){
			if(map2.getOrDefault(ch, 0) != map1.get(ch)){
				return false;
			}
		}

		return true;
	}
	public static void findAnagrams(String s, String p) {
        // write your code here
		// if(p.length() > s.length()){
        //     List<Integer> ans = new ArrayList<>();
        //     return ans;
        // }
        HashMap<Character, Integer> mapp = new HashMap<>();
        for(int i = 0 ; i < p.length() ; i++){
            char ch = p.charAt(i);
            mapp.put(ch, mapp.getOrDefault(ch, 0) + 1);
        }
        int count = 0;
        int i = p.length();
        int j = 0;
        
        HashMap<Character, Integer> maps = new HashMap<>();
        for(int k = 0 ; k < p.length() ; k++){
            char ch = s.charAt(k);
            maps.put(ch, maps.getOrDefault(ch, 0) + 1);
        }
        
        List<Integer> ans = new ArrayList<>();
        while(i < s.length()){
            if(maps.equals(mapp) == true){
                ans.add(i - p.length());
				count++;
            }
            
            //add
            char ch = s.charAt(i);
            maps.put(ch, maps.getOrDefault(ch, 0) + 1);
            
            //remove
            char ch2 = s.charAt(j);
            if(maps.get(ch2) == 1){
                maps.remove(ch2);
            }else{
                maps.put(ch2, maps.getOrDefault(ch2, 0) -1);
            }
            i++;
            j++;
        }
        if(maps.equals(mapp)){
                ans.add(i - p.length());
				count++;
        }
        System.out.println(count);
        for(int val : ans){
			System.out.print(val + " ");
		}
        
	}

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		String s = scn.next();
		String p = scn.next();
		findAnagrams(s, p);
	}

}
