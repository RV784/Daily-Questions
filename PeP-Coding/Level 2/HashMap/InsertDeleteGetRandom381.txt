

class RandomizedCollection {
    HashMap<Integer, HashSet<Integer>> map;
    List<Integer> list;
    Random r;

    public RandomizedCollection() {
        map = new HashMap<>();
        list = new ArrayList<>();
        r = new Random();
    }
    
    public boolean insert(int val) {0
        boolean flag;
        HashSet<Integer> set;
        
        if(map.containsKey(val)){
            set = map.get(val);
            flag = false;
        }else{
            set = new HashSet<Integer>();
            flag = true;
        }
        
        set.add(list.size());
        list.add(val);
        map.put(val, set);
        return flag;
        
        
    }
    
    public boolean remove(int val) {
        HashSet<Integer> set;
        if(map.containsKey(val)){
            set = map.get(val);
            
        }else{
            return false;
        }
        
        int ridx = -1;
        for(int i : set){
            ridx = i;
            break;
        }
        
        set.remove(ridx);
        map.put(val, set);
        if(map.get(val).size() == 0){
            map.remove(val);
        }
        if(ridx == list.size() - 1){
            list.remove(list.size() - 1);
        }else{
            list.set(ridx, list.get(list.size() - 1));
            list.remove(list.size() - 1);
            
            int nwval = list.get(ridx);
            
            HashSet<Integer> temp = map.get(nwval);
            temp.remove(list.size());
            temp.add(ridx);
            map.put(nwval, temp);
        }
        
        return true;
    }
    
    public int getRandom() {
        int randomidx = r.nextInt(list.size());
        return list.get(randomidx);
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */