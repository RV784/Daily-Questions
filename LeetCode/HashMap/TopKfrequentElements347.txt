//https://leetcode.com/problems/top-k-frequent-elements/

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int val : nums){
            map.put(val, map.getOrDefault(val, 0) + 1);
        }
        
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> map.get(a) - map.get(b));
        
        for(int n : map.keySet()){
            pq.add(n);
            if(pq.size() > k){
                pq.poll();
            }
        }
        
        int[] ans = new int[k];
        int i = 0;
        while(pq.isEmpty()  == false){
            ans[i] = pq.poll();
            i++;
        }
        
        return ans;
    }
}