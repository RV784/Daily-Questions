class Solution {
    public String addStrings(String num1, String num2) {
        StringBuilder sb = new StringBuilder();
        
        int i = num1.length()-1;
        int j = num2.length()-1;
        
        int c = 0;
        Character[] arr = new Character[Math.max(num1.length(), num2.length())+1];
        
        int ansidx = arr.length - 1;
        
        while(i >= 0 && j >= 0){
            int n1 = Character.getNumericValue(num1.charAt(i));
            int n2 = Character.getNumericValue(num2.charAt(j));
            int temp = n1 + n2 + c;
            if(temp >= 10){
                c = 1;
                temp = temp%10;
            }else{
                c = 0;
            }
            
            arr[ansidx] = (char)(temp + '0');
            
            i--;
            j--;
            ansidx--;
        }
        
        if(i >= 0){
            while(i >= 0){
                int n1 = Character.getNumericValue(num1.charAt(i));
                int temp = n1 + c;
                if(temp >= 10){
                    c = 1;
                    temp = temp%10;
                }else{
                    c = 0;
                }
                
                arr[ansidx] = (char)(temp + '0');
                i--;
                ansidx--;
            }
        }else if(j >= 0){
            while(j >= 0){
                int n2 = Character.getNumericValue(num2.charAt(j));
                int temp = n2 + c;
                if(temp >= 10){
                    c = 1;
                    temp = temp%10;
                }else{
                    c = 0;
                }
                
                arr[ansidx] = (char)(temp + '0');
                j--;
                ansidx--;
            }
        }
        
        if(c != 0){
            sb.append('1');
        }
        int k = 1;
        while(k < arr.length){
            sb.append(arr[k]);
            k++;
        }
        return sb.toString();
    }
}