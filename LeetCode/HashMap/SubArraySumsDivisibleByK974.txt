//https://leetcode.com/problems/subarray-sums-divisible-by-k/

class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        
        int i = -1;
        int sum = 0;
        int count = 0;
        map.put(0, 1);
        while(i < nums.length - 1){
            i++;
            
            sum += nums[i];
            int rem = sum%k;
            if(rem < 0){
                rem = rem + k;
            }
            
            if(map.containsKey(rem)){
                count += map.get(rem);
            }
            map.put(rem, map.getOrDefault(rem, 0) + 1);
        }
        
        return count;
    }
}