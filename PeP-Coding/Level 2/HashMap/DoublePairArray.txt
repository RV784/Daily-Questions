//https://nados.io/question/double-pair-array?zen=true

import java.util.*;

public class Main {

    public static boolean solution(int[] arr) {
        // write your code here
		HashMap<Integer, Integer> map = new HashMap<>();
        for(int val : arr){
			map.put(val, map.getOrDefault(val, 0) + 1);
		}
		if(map.getOrDefault(0, 0) != 0){
			if(map.get(0)%2 != 0){
				return false;
			}
		}
		Arrays.sort(arr);
		int k = 0;
		for(int i = 0 ; i < arr.length - 1 ; i++){
			if(arr[i] < 0 && arr[i+1] >= 0){
				k = i+1;
				break;
			}
		}
		for(int i = k ; i < arr.length ; i++){
			int num = arr[i];
			if(map.containsKey(num)){
				if(map.containsKey(num*2)){
					if(map.get(num) == 1){
						map.remove(num);
					}else{
						map.put(num, map.get(num) - 1);
					}

					if(map.get(num*2) == 1){
						map.remove(num*2);
					}else{
						map.put(num*2, map.get(num*2) - 1);
					}
				}
			}
		}

		for(int i = k-1 ; i >= 0 ; i--){
			int num = arr[i];
			if(map.containsKey(num)){
				if(map.containsKey(num*2)){
					if(map.get(num) == 1){
						map.remove(num);
					}else{
						map.put(num, map.get(num) - 1);
					}

					if(map.get(num*2) == 1){
						map.remove(num*2);
					}else{
						map.put(num*2, map.get(num*2) - 1);
					}
				}
			}
		}
		// System.out.println(map.size());
		if(map.size() == 0){
			return true;
		}

		return false;
    }
    
    public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		int[] arr = new int[n];
		for(int i = 0 ; i < n; i++){
			arr[i] = scn.nextInt();
		}
		System.out.println(solution(arr));
	}

}
