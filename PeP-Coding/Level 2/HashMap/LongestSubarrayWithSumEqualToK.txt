//https://nados.io/question/longest-subarray-with-equal-number-of-zeroes-and-ones?zen=true

import java.util.*;

public class Main {

    public static int solution(int[] arr) {
        // write your code here
        int[] nums = new int[arr.length];
        for(int i = 0 ; i < arr.length ; i++){
            if(arr[i] == 0){
                nums[i] = -1;
            }else{
                nums[i] = arr[i];
            }
        }

        HashMap<Integer, Integer> map = new HashMap<>();
        int i = -1;
        int sum = 0;
        map.put(0, -1);
        int len = 0;
        while(i < nums.length-1){
            i++;

            sum += nums[i];

            if(map.containsKey(sum)){
                len = Math.max(len, i - map.get(sum));
            }else{
                map.put(sum, i);
            }
        }

        return len;
    }
    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = scn.nextInt();
        }
        System.out.println(solution(arr));
    }

}
