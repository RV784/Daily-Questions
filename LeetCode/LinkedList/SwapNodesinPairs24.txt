//https://leetcode.com/problems/swap-nodes-in-pairs/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null){ //if there is only one or no element test case
            return head;
        }else if(head.next.next == null){  //if only 2 elements are there 
            ListNode t = head.next;
            head.next.next = head;
            head.next = null;
            return t;
        }
        
        ListNode temp = head.next;
        ListNode prev = null;
        ListNode connect = head;
        while(head != null && head.next != null && head.next.next != null){
            ListNode temp2 = head.next.next;
            head.next.next = head;
            head.next = temp2;
            
            if(prev != null){
                prev.next = connect;
            }
            
            prev = head;
            head = head.next;
            connect = head.next;
        }
        // if(head == null){
        //     System.out.println("true h");
        // }
        // if(prev == null){
        //     System.out.println("true p");
        // }
        // if(connect == null){
        //     System.out.println("true c");
        // }
        //  System.out.println(prev.val + " ");
        
        if(connect == null){
            return temp;
        }else{
            ListNode temp2 = connect;
            head.next = null;
            connect.next = head;
            prev.next = connect;
        }
        return temp;
    }
}