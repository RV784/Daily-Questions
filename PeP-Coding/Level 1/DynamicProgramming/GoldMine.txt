//https://nados.io/content/3ac31098-0fcc-4418-972c-843d81241795/feea23f3-0b47-47a1-af6c-b4e07199d7c9/d3da3c36-450f-40eb-9b1f-966df2ebfff2/question/2b4b76f4-43ed-42b1-a9a5-e2868a8fc2b7

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        Scanner scn = new Scanner(System.in);
        int n = scn.nextInt();
        int m = scn.nextInt();

        int arr[][] = new int[n][m];
        
        for(int i = 0 ; i < arr.length ; i++){
            for(int j = 0 ; j < arr[0].length ; j++){
                arr[i][j] = scn.nextInt();
            }
        }

        int ans = solution(arr);
        System.out.println(ans);
    }

    static int solution(int[][] arr){
        int[][] dp = new int[arr.length][arr[0].length];
        
        for(int j = arr[0].length-1 ; j >= 0 ; j--){
            for(int i = arr.length-1 ; i>= 0 ; i--){
                if(j == arr[0].length - 1){
                    dp[i][j] = arr[i][j];
                }else if(i == 0){
                    dp[i][j] = arr[i][j] + Math.max(dp[i][j+1], dp[i+1][j+1]);
                }else if(i == arr.length - 1){
                    dp[i][j] = arr[i][j] + Math.max(dp[i][j+1], dp[i-1][j+1]);
                }else{
                    dp[i][j] = arr[i][j] + Math.max(dp[i][j+1], Math.max(dp[i-1][j+1], dp[i+1][j+1]));
                }
            }
        }
        
        int ans = Integer.MIN_VALUE;
        for(int i = 0 ; i < arr.length ; i++){
            ans = Math.max(ans, dp[i][0]);
        }
        return ans;
    }

}