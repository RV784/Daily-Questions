//https://nados.io/question/find-anagram-mappings?zen=true


import java.util.*;

public class Main {
	public static int[] anagramMappings(int[] arr1, int[] arr2) {
		// write your code here
		HashMap<Integer, Queue<Integer>> map = new HashMap<>();
		for(int i = 0 ; i < arr2.length ; i++){
			int val = arr2[i];
			if(map.containsKey(val)){
				Queue st = map.get(val);
				st.add(i);
			}else{
				Queue<Integer> q = new LinkedList<>();
				q.add(i);
				map.put(val, q);
			}
		}

		int[] ans = new int[arr1.length];

		for(int i = 0 ; i < arr1.length ; i++){
			int val = arr1[i];
			if(map.containsKey(val)){
				Queue<Integer> que = map.get(val);
				ans[i] = que.remove();
				if(que.size() == 0){
					map.remove(val);
				}
			}
		}



		return ans;
	}

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		int[] a = new int[n];
		int[] b = new int[n];
		for (int i = 0; i < a.length; i++) {
			a[i] = s.nextInt();
		}
		for (int j = 0; j < b.length; j++) {
			b[j] = s.nextInt();
		}
		int[] res = anagramMappings(a, b);
		for (int j = 0; j < res.length; j++) {
			System.out.print(res[j] + " ");
		}
	}

}
