//https://leetcode.com/problems/edit-distance/

class Solution {
    public int minDistance(String word1, String word2) {
        
        int m = word1.length();
        int n = word2.length();
        int[][] dp = new int[m+1][n+1];
        
        //initialisation
        for(int i = 0 ; i <= m ; i++){
            for(int j = 0 ; j <= n ; j++){
                if(i == 0){
                    dp[i][j] = j;
                }
                
                if(j == 0){
                    dp[i][j] = i;
                }      
            }
        }
        
        for(int i = 1 ; i <= m ; i++){
            for(int j = 1 ; j <= n ; j++){
                if(word1.charAt(i-1) == word2.charAt(j-1)){
                    dp[i][j] = dp[i-1][j-1];
                    continue;
                }
                
                int replace = dp[i][j-1];
                int delete = dp[i-1][j-1];
                int add = dp[i-1][j];
                
                dp[i][j] = 1 + Math.min(replace, Math.min(delete, add));
            }
        }
        return dp[m][n];
    }
}