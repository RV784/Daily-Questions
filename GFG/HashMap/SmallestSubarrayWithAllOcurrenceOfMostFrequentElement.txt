//https://practice.geeksforgeeks.org/problems/smallest-subarray-with-all-occurrences-of-a-most-frequent-element2258/1#

// { Driver Code Starts
//Initial Template for Java

//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;


 // } Driver Code Ends
//User function Template for Java


class Solution{
    
  
    ArrayList<Integer> smallestSubsegment(int arr[], int n)
     {
        // write your code here
		HashMap<Integer, Integer> maps = new HashMap<>();
		for(int i = 0 ; i < arr.length ; i++){
			int val = arr[i];
			if(maps.containsKey(val) == false){
				maps.put(val, i);
			}
		}
		int hf = 0;
		int s = 0;
		int e = 0;
		int len = 0;
		int ans = 0;
		HashMap<Integer, Integer> map = new HashMap<>();
		for(int i = 0 ; i < arr.length ; i++){
			int val = arr[i];
			map.put(val, map.getOrDefault(val, 0) + 1);

			int fr = map.get(val);
			
			if(fr > hf){
				hf = fr;
				int ts = maps.get(val);
				int te = i;
				int tlen = te - ts + 1;
				s = ts;
				e = te;
				len = tlen;
				ans = val;
			}else if(fr == hf){
				hf = fr;
				int ts = maps.get(val);
				int te = i;
				int tlen = te - ts + 1;
				if(tlen < len){
					s = ts;
					e = te;
					len = tlen;
					ans = val;
				}
			}
		}
// 		System.out.println(ans);
// 		System.out.println(s);
// 		System.out.println(e);
        ArrayList<Integer> list = new ArrayList<>();
        for(int i = s ; i <= e ; i++){
            list.add(arr[i]);
        }
        
        return list;
    }
  
    
}


// { Driver Code Starts.

// Driver class
class GFG {
    
    // Driver code
	public static void main (String[] args) throws IOException{
		// Taking input using buffered reader
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int testcases = Integer.parseInt(br.readLine());
		
		// looping through all testcases
		while(testcases-- > 0){
		    
		    String line1 = br.readLine();
		    String[] element = line1.trim().split("\\s+");
		    int sizeOfArray = Integer.parseInt(element[0]);
		    
		    int arr [] = new int[sizeOfArray];
		    
		    String line = br.readLine();
		    String[] elements = line.trim().split("\\s+");
		    
		    for(int i = 0;i<sizeOfArray;i++){
		        arr[i] = Integer.parseInt(elements[i]);
		    }
		    
		    Solution obj = new Solution();
		    ArrayList<Integer> res = new ArrayList<Integer>();
		    res = obj.smallestSubsegment(arr, sizeOfArray);
		    for(int i:res)
		        System.out.print(i + " ");
		    System.out.println();
		}
	}
}


            

  // } Driver Code Ends